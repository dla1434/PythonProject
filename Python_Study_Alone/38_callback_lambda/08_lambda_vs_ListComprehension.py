
# 람다를 보면 리스트 내포 방식과 유사한 것을 알 수 있다

a = list(range(100))
# 리스트 내포 방식
print([i * i for i in a])
# 람다식 사용 방식
print(list(map(lambda number: number * number, a)))

# 리스트 내포와 람다식 처리 결과는 동일하다.

# 짝수만 구하려고 한다면
print([i * i for i in a if i % 2 == 0])

'''
그럼 언제 리스트 내포 방식을 쓰고 언제 람다식을 써야 할까?
	개취이다..

리스트 내포와 람다식 차이점
	리스트 내포
		결과가 리스트로 나온다..당연하지..[]로 감사고 처리하고 넣으니깐
		즉 이말은 리스트가 하나 더 복제되서 메모리를 더 차지한다는 의미이다.
		최근에는 오히려 람다식보다 더 많이 사용하는 구문이라고 한다.
	람다식
		map(), filter() 등의 람다 함수는 제너레이터 함수라서 
		내부의 데이터가 실제로 메모리 용량을 차지하는 것들은 아닙니다.
		메모리 용량을 더 적게 사용하고 싶다면 람다식이 유리할 수 있겠다.
'''